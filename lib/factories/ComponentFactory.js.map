{"version":3,"sources":["../../src/factories/ComponentFactory.js"],"names":[],"mappings":";;;;;;;;;;;;;;kCAAc,uBAAuB;;;;;;IAEhB,gBAAgB;AACtB,aADM,gBAAgB,CACrB,eAAe,EAAE;8BADZ,gBAAgB;;AAE7B,YAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KAC1C;;iBAHgB,gBAAgB;;;;;;qCAK3B,gBAAC,cAAc,EAAE,UAAU,EAAE;AAC/B,gBAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;AACvD,gBAAI,UAAU,EAAE;AACZ,yBAAS,CAAC,UAAU,GAAG,UAAU,CAAC;aACrC,MAAM;AACH,yBAAS,CAAC,UAAU,GAAG,gCAAE,MAAM,CAAC,KAAK,CAAC,CAAC;aAC1C;;AAED,qBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;AACjE,qBAAS,CAAC,UAAU,CAAC,IAAI,CACrB,wBAAwB,EACxB,SAAS,CAAC,KAAK,KAAK,SAAS,IAAI,SAAS,CAAC,OAAO,KAAK,SAAS,CACnE,CAAC;;AAEF,gBAAI,SAAS,CAAC,OAAO,EAAE;AACnB,yBAAS,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS,EAAE;2BAAM,SAAS,CAAC,OAAO,EAAE;iBAAA,CAAC,CAAC;aACjE;;AAED,mBAAO,SAAS,CAAC;SACpB;;;;;;;qCAEG,cAAC,aAAa,EAAE,UAAU,EAAE;AAC5B,gBAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;;AAEtD,mBAAO,SAAQ,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,YAAM;AACzC,yBAAS,CAAC,UAAU,GAAG,UAAU,CAAC;;AAElC,oBAAI,SAAS,CAAC,OAAO,EAAE;AACnB,6BAAS,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS,EAAE;+BAAM,SAAS,CAAC,OAAO,EAAE;qBAAA,CAAC,CAAC;iBACjE;;AAED,oBAAI,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;AACjD,6BAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,WAAW,EAAK;AACxC,4BAAI,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW,CAAC,EAAE;AAC/B,qCAAS,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,cAAc,GAAG,WAAW,GAAG,IAAI,CAAC,CAAC;yBACvF;qBACJ,CAAC,CAAC;iBACN;;AAED,uBAAO,SAAS,CAAC;aACpB,CAAC,CAAC;SACN;;;WA9CgB,gBAAgB;;;qBAAhB,gBAAgB","file":"ComponentFactory.js","sourcesContent":["import $ from 'springbokjs-dom/lib/$';\n\nexport default class ComponentFactory {\n    constructor(instanceFactory) {\n        this.instanceFactory = instanceFactory;\n    }\n\n    create(componentClass, $container) {\n        const component = this.instanceFactory(componentClass);\n        if ($container) {\n            component.$container = $container;\n        } else {\n            component.$container = $.create('div');\n        }\n\n        component.$container.attr('data-component', componentClass.name);\n        component.$container.attr(\n            'data-component-preload',\n            component.ready !== undefined || component.destroy !== undefined\n        );\n\n        if (component.destroy) {\n            component.$container.on('dispose', () => component.destroy());\n        }\n\n        return component;\n    }\n\n    load(componentName, $container) {\n        const component = this.instanceFactory(componentName);\n\n        return Promise.resolve(component).then(() => {\n            component.$container = $container;\n\n            if (component.destroy) {\n                component.$container.on('dispose', () => component.destroy());\n            }\n\n            if (component.elements && component.elements.length) {\n                component.elements.forEach((elementName) => {\n                    if (!component['$' + elementName]) {\n                        component['$' + elementName] = $container.find('[data-role=\"' + elementName + '\"]');\n                    }\n                });\n            }\n\n            return component;\n        });\n    }\n}\n"]}