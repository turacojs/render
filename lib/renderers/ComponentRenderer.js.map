{"version":3,"sources":["../../src/renderers/ComponentRenderer.js"],"names":[],"mappings":"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","file":"ComponentRenderer.js","sourcesContent":["import $ from 'springbokjs-dom/lib/$';\nimport ComponentFactory from '../factories/ComponentFactory';\n\nexport default class ComponentRenderer {\n    /**\n     * @param {ComponentFactory|Function} factory\n     */\n    constructor(factory) {\n        if (typeof factory === 'function') {\n            factory = new ComponentFactory(factory);\n        }\n\n        this.factory = factory;\n    }\n\n    createThenRender(componentClass, properties, data) {\n        const component = this.factory.create(componentClass);\n        return this.render(component, properties, data);\n    }\n\n    _setElementsRole(component) {\n        if (component.elements && component.elements.length) {\n            component.elements.forEach((elementName) => {\n                if (component['$' + elementName]) {\n                    component['$' + elementName].setAttribute('data-role', elementName);\n                }\n            });\n        }\n    }\n\n    _setComponentsRole(component) {\n        if (component.components && component.components.length) {\n            component.components.forEach((componentName) => {\n                if (!component[componentName]) {\n                    throw new Error('Missing component ' + componentName);\n                }\n\n                component[componentName].$container.setAttribute('data-role', componentName);\n            });\n        }\n    }\n\n    render(component, properties, data) {\n        component.component = componentClass => {\n            return properties => {\n                const data = properties.data;\n                delete properties.data;\n                return this.createThenRender(componentClass, properties, data);\n            };\n        };\n\n        component.init(properties);\n\n        if (properties) {\n            component.$container.attr('data-component-properties', JSON.stringify(properties));\n        }\n\n        const renderResult = component.render(data);\n        this._setElementsRole(component);\n        this._setComponentsRole(component);\n\n        if (renderResult instanceof Promise) {\n            return renderResult.then((renderResult) => {\n                if (renderResult) {\n                    component.$container.empty().append(renderResult);\n                }\n\n                return component;\n            });\n        }\n\n        if (renderResult) {\n            component.$container.empty().append(renderResult);\n        }\n\n        return component;\n    }\n}\n"]}