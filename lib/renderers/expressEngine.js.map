{"version":3,"sources":["../../src/renderers/expressEngine.js"],"names":[],"mappings":";;;;;qBAMwB,mBAAmB;;;;4BANlB,gBAAgB;;;;oCACjB,0BAA0B;;;;iCACpB,qBAAqB;;;;yCACtB,+BAA+B;;;;6CACrB,mCAAmC;;;;AAE3D,SAAS,mBAAmB,CAAC,OAAO,EAAE;AACjD,QAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAE,CAAC,CAAC,KAAK,GAAG,EAAE;AACpC,eAAO,IAAI,GAAG,CAAC;KAClB;;AAED,QAAM,iBAAiB,GAAG,mCAAsB,CAAC,YAAW;AACxD,eAAO,2CAAqB,gDAA2B,OAAO,GAAG,aAAa,EAAE,WAAW,CAAC,CAAC,CAAC;KACjG,CAAA,EAAG,CAAC,CAAC;;AAEN,QAAM,YAAY,GAAG,8BAAiB,CAAC,YAAW;AAC9C,eAAO,sCAAgB,gDAA2B,OAAO,CAAC,CAAC,CAAC;KAC/D,CAAA,EAAG,EAAE,iBAAiB,CAAC,CAAC;;AAEzB,WAAO,UAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAK;AAC7B,YAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5C,YAAI,MAAM,GAAG,YAAY,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACxE,YAAI,OAAO,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AACnC,mBAAO,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;uBAAK,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,CAAC;aAAA,CAAC,SAAM,CAAC,UAAC,GAAG;uBAAK,QAAQ,CAAC,GAAG,CAAC;aAAA,CAAC,CAAC;SACvG;AACD,gBAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;KACzC,CAAC;CACL","file":"expressEngine.js","sourcesContent":["import ViewRenderer from './ViewRenderer';\nimport ViewFactory from '../factories/ViewFactory';\nimport ComponentRenderer from './ComponentRenderer';\nimport ComponentFactory from '../factories/ComponentFactory';\nimport createBasicInstanceFactory from '../factories/basicInstanceFactory';\n\nexport default function createExpressEngine(dirname) {\n    if (dirname[dirname.length -1] !== '/') {\n        dirname += '/';\n    }\n\n    const componentRenderer = new ComponentRenderer((function() {\n        return new ComponentFactory(createBasicInstanceFactory(dirname + 'components/', 'Component'));\n    })());\n\n    const viewRenderer = new ViewRenderer((function() {\n        return new ViewFactory(createBasicInstanceFactory(dirname));\n    })(), componentRenderer);\n\n    return (path, data, callback) => {\n        const name = path.slice(dirname.length, -3);\n        let result = viewRenderer.createThenRender(name, data.properties, data);\n        if (typeof result.then === 'function') {\n            return result.then((result) => callback(null, result.toHtmlString())).catch((err) => callback(err));\n        }\n        callback(null, result.toHtmlString());\n    };\n}\n"]}