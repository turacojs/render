{"version":3,"sources":["../../src/renderers/FragmentRenderer.js"],"names":[],"mappings":";;;;;;;;;;;IAAqB,gBAAgB;;;;;AAItB,aAJM,gBAAgB,CAIrB,OAAO,EAAE;8BAJJ,gBAAgB;;AAK7B,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;;iBANgB,gBAAgB;;;;;;+BAQjB,0BAAC,YAAY,EAAE,IAAI,EAAE;AACjC,gBAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACnD,mBAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SACtC;;;;;;;+BAEK,gBAAC,QAAQ,EAAE,IAAI,EAAE;AACnB,oBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEtB,gBAAI,QAAQ,CAAC,MAAM,EAAE;AACjB,uBAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,EAAE;AAC1C,yBAAK,EAAE,QAAQ,CAAC,KAAK;AACrB,2BAAO,EAAE,QAAQ,CAAC,UAAU;iBAC/B,CAAC,CAAC;aACN;;AAED,mBAAO,QAAQ,CAAC;SACnB;;;WAxBgB,gBAAgB;;;qBAAhB,gBAAgB","file":"FragmentRenderer.js","sourcesContent":["export default class FragmentRenderer {\n    /**\n     * @param {FragmentFactory} factory\n     */\n    constructor(factory) {\n        this.factory = factory;\n    }\n\n    createThenRender(fragmentName, data) {\n        const fragment = this.factory.create(fragmentName);\n        return this.render(fragment, data);\n    }\n\n    render(fragment, data) {\n        fragment.render(data);\n\n        if (fragment.parent) {\n            return this.createThenRender(fragment.parent, {\n                title: fragment.title,\n                content: fragment.$container,\n            });\n        }\n\n        return fragment;\n    }\n}\n"]}