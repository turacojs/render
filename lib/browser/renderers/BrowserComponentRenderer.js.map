{"version":3,"sources":["../../../src/browser/renderers/BrowserComponentRenderer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;0CAA8B,mCAAmC;;;;IAE5C,wBAAwB;aAAxB,wBAAwB;8BAAxB,wBAAwB;;mCAAxB,wBAAwB;;;cAAxB,wBAAwB;;iBAAxB,wBAAwB;;;;;;eAIrC,cAAC,aAAa,EAAE,UAAU,EAAE;AAC5B,gBAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AACjE,gBAAI,UAAU,GAAG,UAAU,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC;AACtE,sBAAU,GAAG,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAClD,qBAAS,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;AACxC,qBAAS,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;AAErC,gBAAI,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;AACjD,yBAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,WAAW,EAAK;AACxC,6BAAS,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,cAAc,GAAG,WAAW,GAAG,IAAI,CAAC,CAAC;iBACtG,CAAC,CAAC;aACN;;AAED,qBAAS,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;AACrC,qBAAS,CAAC,KAAK,EAAE,CAAC;AAClB,sBAAU,CAAC,UAAU,GAAG,SAAS,CAAC;SACrC;;;eAEK,gBAAC,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE;AAChC,qBAAS,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;AACxC,qBAAS,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;AACrC,gBAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAC9B,qBAAS,CAAC,MAAM,EAAE,CAAC;AACnB,gBAAI,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1C,gBAAI,YAAY,YAAY,OAAO,EAAE;AACjC,uBAAO,YAAY,CAAC,IAAI,CAAC,YAAM;AAC3B,6BAAS,CAAC,KAAK,EAAE,CAAC;AAClB,2BAAO,SAAS,CAAC;iBACpB,CAAC,CAAC;aACN;AACD,qBAAS,CAAC,KAAK,EAAE,CAAC;AAClB,mBAAO,SAAS,CAAC;SACpB;;;WApCgB,wBAAwB;;;qBAAxB,wBAAwB","file":"BrowserComponentRenderer.js","sourcesContent":["import ComponentRenderer from '../../renderers/ComponentRenderer';\n\nexport default class BrowserComponentRenderer extends ComponentRenderer {\n    /**\n     * Invoked only on browser just the first time\n     */\n    load(componentName, $container) {\n        const component = this.factory.create(componentName, $container);\n        var properties = $container.getAttribute('data-component-properties');\n        properties = properties && JSON.parse(properties);\n        component.properties = properties || {};\n        component.init(component.properties);\n\n        if (component.elements && component.elements.length) {\n            component.elements.forEach((elementName) => {\n                component['$' + elementName] = component.$container.findFirst('[data-role=\"' + elementName + '\"]');\n            });\n        }\n\n        component.load(component.properties);\n        component.ready();\n        $container._component = component;\n    }\n\n    render(component, properties, data) {\n        component.properties = properties || {};\n        component.init(component.properties);\n        this._initElements(component);\n        component.create();\n        var renderResult = component.render(data);\n        if (renderResult instanceof Promise) {\n            return renderResult.then(() => {\n                component.ready();\n                return component;\n            });\n        }\n        component.ready();\n        return component;\n    }\n}\n"]}